2015-12-18  Mario Mendez-Lojo  <mario.mendezlojo@amd.com>

	* Bug 553 - [Finalizer] Allow code objects to have default
	floating-point rounding mode of defaul
	* Bug 582 - Runtime changes to support code object proposal =>
	improved documentation of the code object loading functions
	* Bug 610 - [Extensions] Runtime versus HSAIL extension naming
	* Bug 612 - [Extensions] Extension support rules for system and
	agent

2015-12-18  Mario Mendez-Lojo  <mario.mendezlojo@amd.com>

	* Bug 540 - query for floating-point MAD single/double rounding
	mode
	* Bug 582 - Runtime changes to support code object proposal =>
	created hsa_isa_get_exception_policies to replace
	hsa_agent_get_exception_policies since an agent may support more
	than one ISA
	* Bug 607 - [Extensions] Extension name query
	* Bug 609 - Allow kernarg-backing memory to be coarse-grained =>
	reversed action, only fine-grained is allowed
	* Added more detail to deprecation messages

2015-12-15  Mario Mendez-Lojo  <mario.mendezlojo@amd.com>

	* Bug 600 - [Memory] Add queries for size of private segment
	memory per work-item

2015-12-14  Mario Mendez-Lojo  <mario.mendezlojo@amd.com>

	* Editorial changes: deprecated enum constants and deprecation
	text are now shown, declaration briefs are shown under signature
	box
	* Latexmk compiler aborts on first error

2015-12-11  Mario Mendez-Lojo  <mario.mendezlojo@amd.com>

	* Deprecated declarations back into API sections (instead of being
	bundled together towards the end of the document)
	* Added more detail on the multi-signal wait APIs and associated
	text
	* Multiple fixes in the Instruction Set Architecture and
	Executables section: added support for mutiple wavefronts per ISA,
	added missing return error codes, text improvements, etc.
	* Clarified that hsa_memory_assign_agents can only receive R/W or
	R/O permissions.

2015-12-06  Mario Mendez-Lojo  <mario.mendezlojo@amd.com>

	* Bug 519 - Define topology information for nodes to allow caches
	and profiling information to be attached to nodes
	* Bug 569 - hsa_memory_copy and coarse grain memory regions
	* Bug 582 - Runtime changes to support code object proposal
	* Bug 609 - Allow kernarg-backing memory to be coarse-grained
	* Added proposed APIs for multiple signal wait

2015-11-01  Mario Mendez-Lojo  <mario.mendezlojo@amd.com>

	* Bug 534 - Image extension query issues
	* Bug 559 - hsa_executable_[agent_]global_variable_define address
	parameter clarification
	* Bug 561 - [Agent and System Information, Queues] Remove
	HSA_AGENT_INFO_QUEUES_MAX
	* Bug 562 - [Agent and System Information] Remove
	HSA_AGENT_INFO_NODE
	* Bug 570 - Clarify HSA_REGION_INFO_SIZE for a private segment
	region
	* Bug 571 - Clarify how private segment size is specified in a
	dispatch packet

2015-10-14  Simon Brand  <simon@codeplay.com>

	* Added drafts of Performance Counter and Events API

2015-10-11  Mario Mendez-Lojo  <mario.mendezlojo@amd.com>

	* Bug 226 - [Signals] Change signal value without waking up
	consumer
	* Bug 529 - Runtime queries (deprecated
	HSA_AGENT_INFO_WAVEFRONT_SIZE, added attributes
	HSA_CODE_SYMBOL_INFO_KERNEL_CALL_CONVENTION and
	HSA_EXECUTABLE_SYMBOL_INFO_KERNEL_CALL_CONVENTION to figure out
	the call convention of a kernel)
	* Bug 530 - Grid max size increased to 2^64 - 1
	* HSA_EXECUTABLE_SYMBOL_INFO_KERNEL_KERNARG_SEGMENT_SIZE and
	HSA_CODE_SYMBOL_INFO_KERNEL_KERNARG_SEGMENT_ALIGNMENT must be
	multiples of 16
	* Added clarification to hsa_memory_copy: the buffers should not
	overlap
	* Added clarification: HSA_ISA_INFO_CALL_CONVENTION_COUNT should
	be greater than one

2015-04-06  Mario Mendez-Lojo  <mario.mendezlojo@amd.com>

	* Bug 465 - Rename runtime api functions that specify memory order
	to clarify they are scacquire and screlease

2015-04-01  Mario Mendez-Lojo  <mario.mendezlojo@amd.com>

	* Bug 464 - Avoid using enumeration type is hsa_queue_t definition
	* Bug 465 - Rename runtime api functions that specify memory order
	to clarify they are scacquire and screlease
	* Bug 466 - Clarify limitations of single producer AQL queues
	* Bug 468 - Late March/early April 2015 errata
	* Bug 469 - Alignment queries
	* Bug 474 - Add new error code: HSA_STATUS_ERROR_INVALID_SYMBOL
	* Bug 475 - Missing module name when getting code object's symbol handle
	* Bug 478 - Error in kernel dispatch example
	* Converging document's format with public PDF version

2015-03-09  Mario Mendez-Lojo  <mario.mendezlojo@amd.com>

	* Bug 430 - Require lifetime of code object to be no shorter than
	lifetime of executables into which it is loaded
	* Bug 433 - Rename hsa_symbol_t to hsa_symbol_kind_t
	* Bug 434 - Naming of default floating-point rounding mode
	* Bug 438 - hsa_ext_sampler_coordinate_mode_t enumeration does not
	match PRM BRIG enumeration BrigSamplerCoordNormalization
	* Bug 439 - Add error code for isa queries to indicate invalid or
	unknown isa name
	* Bug 453 - Remove declaration/definition from
	hsa_symbol_linkage_t
	* Bug 456 - Switch hsa_ext_module_t from opaque handle to a
	pointer to Brig in memory

2015-02-06  Mario Mendez-Lojo  <mario.mendezlojo@amd.com>

	* 1.00 final related cleanup: removed date from footer, added
	missing acknowledgments

2015-01-30  Mario Mendez-Lojo  <mario.mendezlojo@amd.com>

	* Bug 394 - Incorrect example in section 2.6.1.1 for packet
	initialisation

2015-01-19  Mario Mendez-Lojo  <mario.mendezlojo@amd.com>

	* Bug 353 - [Extensions] Extensions interface versioning
	* Bug 391 - Clarify the differences between isa and kernel agent
	* Bug 394 - Incorrect example in section 2.6.1.1 for packet
	initialisation
	* Bug 395 - packet_type_store_release use in examples either
	depends on endianness or will overwrite header bits
	* Bug 399 - Rename hsa_variable_linkage_t to hsa_symbol_linkage_t

2015-01-16  Mario Mendez-Lojo  <mario.mendezlojo@amd.com>

	* Bug 345 - [Signals] "signal" argument in HSA APIs that create
	and destroy signals
	* Bug 353 - [Extensions] Extensions interface versioning
	* Bug 354 - [System Information, Finalizer] default floating-point
	rounding mode of HSA executables
	* Bug 356 - Replacement for "HSA Component" term
	* Bug 368 - Should "component" memory scope be renamed to "agent"
	memory scope?
	* Bug 369 - Should hsa_executable_load_code_object have an options
	argument?
	* Bug 370 - Should hsa_soft_queue_create initialize the queue
	buffer?
	* Bug 371 - How are exceptions reported via the User Mode Queue
	callback?
	* Bug 378 - hsa_isa_t functions to allow offline finalisation
	* [Queues] hsa_soft_queue_create used the term 'completion signal'
	when in reality referring to the 'doorbell signal' of the queue
	* renamed HSA agent to simply agent, as packet types are no longer
	capitalized (for example, Kernel Dispatch is now kernel dispatch)

2014-12-18  Mario Mendez-Lojo  <mario.mendezlojo@amd.com>

	* Bug 266 - [Queue] queue create specify agent that acts as packet
	processor
	* Bug 327 - [Memory] Nullptr outside of global and readonly
	segments
	* Bug 337 - [Images] Image clear pattern is a float[4], but the
	channel type may be integer (forcing conversion)
	* Bug 340 - [Images] copy function requires that the offset is
	identical for the source and destination images
	* Updated examples, which used old queue creation signature
	* [AQL packets] Agent Dispatch example and text use soft queue
	creation approach
	* [Images] improved text

2014-12-15  Mario Mendez-Lojo  <mario.mendezlojo@amd.com>

	* Bug 327 - [Memory] Nullptr outside of global and readonly
	segments
	* Bug 331 - [Code objects & Executables] review feedback on
	chapert 2.8 Code objects and Executables
	* Bug 332 - [Images] Maximum number of elements per dimension is
	missing for several geometries
	* Bug 333 - [Images] Image copy - format and geometry conversion
	* Bug 335 - [Images] asynchronous operations rely on a signal
	argument
	* [Agent information] Moved HSA_AGENT_INFO_FAST_F16_OPERATION to
	core, since it has nothing to do with the finalization API
	* [Images] hsa_ext_image_destroy should receive the image handle,
	and not a pointer to it. Same applies to hsa_ext_sampler_destroy
	* [Images] removed hsa_ext_image_range_t, since it is identical to
	hsa_dim3_t
	* [Images] access permission enumeration is shared with core API
	* [Images] text is more consistent with rest of specification

2014-12-10  Mario Mendez-Lojo  <mario.mendezlojo@amd.com>

	* Bug 299 - hsa_signal_wait API is confusing with its two hints
	referring to time or duration
	* Bug 327 - Nullptr outside of global and readonly segments
	* Bug 301 - Add query for supported default rounding modes
	* Maximum wavefront size is 256, not 64
	* hsa_memory_assign_agent is no-op for fine-grained memory
	* Added version support to HSA agent attributes
	* Kernel symbols indicate whether private memory usage may exceed
	what is reported. Also, kernel symbols indicate alignment of
	kernarg buffer. These attributes were lost in the transition from
	the previous version of the Finalization API to the current one
	* Updated examples to reflect API changes
	* Updated PRM and architecture specification citations
	* Text fixes/improvements all over the document

2014-12-05  Mario Mendez-Lojo  <mario.mendezlojo@amd.com>

	* Added ChangeLog
	* Several enumeration constants have been renamed to follow the
	naming conventions
	* Updated examples to reflect API changes
	* Bug 285 - Query to determine if BREAK and DETECT exception
	policy is enabled for the base or full profile
	* removed service queue from queue definition
	* The queue callback receives the data passed by the application
	at queue creation time (this was removed from the spec by mistake)
	* Removed references to HSA_PACKET_TYPE_ALWAYS_RESERVED
	* Acquire and release fences are applicable to all packets
	* Agent Dispatch packet type is always application-defined
	* Improved text in Memory section
	* Removed starting virtual address from region definition. Also
	removed references to physical memory (or interconnect)
	attributes.
	* Added support for coarse-grained, global memory
	* Bug 336 - Access to readonly segment and agent allocation global
	segment
	* Bug 240 - Agent allocation
	* Bug 272 - Memory registration to register memory as
	coarse-grained
	* Bug 137 - map/unmap?
	* Memory allocation does not allow a size of zero (which used to
	return NULL). The previous scenario is confusing when allocating
	in non-global regions
	* Bug 306 - Extension proposal
	* Finalization API v3.0 has been incorporated into the
	specification
	* Image and sampler handles renamed for consistency with the rest
	of the API

2014-11-06  Mario Mendez-Lojo  <mario.mendezlojo@amd.com>

	* Bug 241 - Header file with spec?
	* Bug 251 - Inconsistent definition of handles: they are uint64_t
	in Core API, but structs wrapping the uint64_t in the Finalization
	API
	* Moved extension-specific enumeration constants to extension
	itself.
	* Bug 270 - Add HSA_AGENT_INFO_QUEUE_MIN_SIZE attribute to
	hsa_agent_t
	* Bug 271 - Create queue creation hint: max private & group memory
	usage per work-item
	* Bug 286 - Add query to get 64 bit queue id
	* Unified Finalizer and Linking APIs
	* Added explanation about each subset of the API
	* Finalization request includes a pointer to the resulting code
	descriptor
	* Bug 261 - Add query for an agent to determine if f16 operations
	are slower than equivalent f32 operation
	* Bug 242 - Cleanup of Finalization and Linking API

2014-10-19  Mario Mendez-Lojo  <mario.mendezlojo@amd.com>

	* Bug 250 - Pointers are no longer represented with uint64_t
	fields, but with void*
	* Bug 251 - Bit-fields are removed from the API
	* The kernel_object field of the Kernel Dispatch packet is a
	handle, not necessarily an address
	* Updated examples
        * Added profile (base/full) and machine model (small/large)
	support attribute
	* HSA_SYSTEM_INFO_TIMESTAMP_FREQUENCY is expressed in Hz, which
	allows better resolution than the previous unit (Mhz)
	* List of consumers passed on signal creation should not contain
	duplicates
	* Bug 232 - Specify that runtime memory allocator is required for
	HSA base profile to support fine grain coherency
	* Memory registration is mandatory in the base profile (assuming
	the pointer does not come from hsa_memory_allocate)
	* Restore (synchronous) memcpy, under the assumption that a
	pointer address is enough to determine the destination memory (the
	readonly memory allocator returns "unique" addresses)
	* Added number of call conventions supported by an HSA agent

2014-09-09  Mario Mendez-Lojo  <mario.mendezlojo@amd.com>

	* Adapted to new naming scheme (Barrier-AND and so on)
